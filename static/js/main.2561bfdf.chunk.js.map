{"version":3,"sources":["components/bottomNavigation/index.tsx","components/timeCounter/index.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","root","marginTop","SimpleBottomNavigation","props","classes","value","onChange","BottomNavigation","event","newValue","showLabels","className","BottomNavigationAction","label","icon","display","justifyContent","fontSize","buttons","alignItems","margin","Clock","React","useState","Date","date","setDate","orgDate","setOrgDate","timeGap","setTimeGap","pauseAt","setPauseAt","stop","setStop","lap","resetLap","useEffect","timerID","setInterval","clearInterval","timeDiff","diff","getTime","msDiff","Math","floor","sDiff","mDiff","Button","variant","onClick","flexDirection","minHeight","content","App","tab","setTab","records","setRecords","List","dense","map","r","index","ListItem","ListItemIcon","ListItemText","primary","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2561bfdf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: 'auto',\r\n  }\r\n});\r\n\r\ninterface Props {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\nconst SimpleBottomNavigation = (props: Props) => {\r\n  const classes = useStyles();\r\n  const {value, onChange} = props;\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        onChange(newValue);\r\n      }}\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\r\n      <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\r\n      <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n\r\nexport default SimpleBottomNavigation","import React, { useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    fontSize: 100,\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    margin: '0 20%',\r\n  },\r\n});\r\n\r\ninterface Props {\r\n  lap: (value: string) => void;\r\n  resetLap: () => void;\r\n}\r\n\r\nconst Clock = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [date, setDate] = React.useState(new Date());\r\n  const [orgDate, setOrgDate] = React.useState(new Date());\r\n  const [timeGap, setTimeGap] = React.useState(0);\r\n  const [pauseAt, setPauseAt] = React.useState(new Date());\r\n  const [stop, setStop] = React.useState(false);\r\n  const {lap, resetLap} = props;\r\n\r\n  useEffect(() => {\r\n    if (stop) return;\r\n    var timerID = setInterval(() => tick(), 10);\r\n    return function cleanup() {\r\n      clearInterval(timerID);\r\n    };\r\n  }, [date, stop]);\r\n\r\n  function tick() {\r\n    setDate(new Date());\r\n  }\r\n\r\n  const stopHandler = () => {\r\n    if (stop) {\r\n      //unpause\r\n      //update timeGap\r\n      const current = new Date();\r\n      const diff = current.getTime() - pauseAt.getTime();\r\n      setTimeGap(timeGap + diff); \r\n    } else {\r\n      //pause\r\n      setPauseAt(new Date())\r\n    }\r\n    setStop(!stop);\r\n  }\r\n  const timeDiff = () => {\r\n    const diff = date.getTime() - orgDate.getTime() - timeGap;\r\n    const msDiff = Math.floor(diff / 10) % 100;\r\n    const sDiff = Math.floor(diff / 1000) % 60;\r\n    const mDiff = Math.floor(diff / 1000 / 60);\r\n\r\n    const result = `${mDiff}:${sDiff >= 10 ? sDiff : '0'+sDiff}.${msDiff}`\r\n    return result;\r\n  };\r\n\r\n  const resetAll = () => {\r\n    setDate(new Date());\r\n    setOrgDate(new Date());\r\n    setTimeGap(0);\r\n    setPauseAt(new Date());\r\n    setStop(false);\r\n    resetLap();\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>{timeDiff()}</div>\r\n      <div className={classes.buttons}>\r\n        <Button variant=\"contained\" onClick={() => lap(timeDiff())}>Lap</Button>\r\n        <Button variant=\"contained\" onClick={stopHandler}>{stop ? \"unpause\" : \"pause\"}</Button>\r\n        <Button variant=\"contained\" onClick={resetAll}>Reset</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport SimpleBottomNavigation from \"./components/bottomNavigation\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Clock from \"./components/timeCounter\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"100vh\",\r\n  },\r\n  content: {},\r\n});\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const [tab, setTab] = useState(\"\");\r\n  const onTabChange = (value: string) => {\r\n    setTab(value);\r\n  };\r\n  const [records, setRecords] = useState([] as any);\r\n\r\n  const lap = (value: string) => {\r\n    setRecords([...records, value]);\r\n  };\r\n\r\n  const resetLap = () => {\r\n    setRecords([]);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.content}>\r\n        <Clock lap={lap} resetLap={resetLap} />\r\n      </div>\r\n\r\n      <List dense={false}>\r\n        {records.map((r: string, index: number) => {\r\n          return (\r\n            <ListItem key={index}>\r\n              <ListItemIcon>\r\n                <TimerIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={r} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n      <SimpleBottomNavigation value={tab} onChange={onTabChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}